/* globals require, module, process */
var request = require("superagent");
var _ = require('lodash');
var async = require('async');
var settings = require('./settings');

(function () {
    var Topics = module.parent.require('./topics');
    var User = module.parent.require('./user');

    function getSetting(key) {
        if (settings && settings.hasOwnProperty(key))
            return settings[key];

        return process.env[key];
    }

    var sendPostUrl = getSetting("sendPostUrl");
    var sendNotificationUrl = getSetting("sendNotificationUrl");
    var username = getSetting("notifyOnPostUsername");
    var password = getSetting("notifyOnPostPassword");

    function hasNotifyOnPostTag(tags) {
        return _.some(tags, function (tag) {
            return tag === "notifyonpost";
        });
    }

    function formatRequestBody(data) {
        var notificationDetails = data.notification.bodyShort.split(",");
        var from = notificationDetails[1].trim();
        var topic = notificationDetails[2].trim();
        topic = topic.substr(0, (topic.length - 2));
        var tags = data.tags || [];

        return {
            "topic": topic,
            "tags": tags,
            "from": from,
            "users": data.users.map(function (user) {
                user = user || {};
                return { "username": user.username, "email": user.email };
            }),
            "datetime": data.notification.datetime,
            "slug": data.topic.slug
        };
    }

    var plugin = {
        postSubmitted: function (data, callback) {
            callback = callback || function (err) {
                if (err) console.log("Error: ", err);
            };

            if (!sendPostUrl || !username || !password) return callback(new Error("Missing url or credentials"));

            if (!data || !data.tid || !data.uid) return callback(new Error("Missing required post details"));

            Topics.getTopicData(data.tid, function (err, topic) {
                if (err) return callback(err);
                if (!topic) return callback(new Error("Topic " + data.tid + " not found"));

                Topics.getTopicTags(data.tid, function (err, tags) {
                    if (err) return callback(err);

                    if (!tags || !tags.length || !hasNotifyOnPostTag(tags))
                        return callback();

                    User.getUserData(data.uid, function (err, user) {
                        if (err) return callback(err);
                        if (!user) return callback(new Error("Topic " + data.uid + " not found"));

                        request
                            .post(sendPostUrl)
                            .send({
                                user: {
                                    uid: user.uid,
                                    username: user.username,
                                    email: user.email,
                                    userslug: user.userslug
                                },
                                topic: {
                                    tid: topic.tid,
                                    uid: topic.uid,
                                    cid: topic.cid,
                                    title: topic.title,
                                    slug: topic.slug,
                                    tags: tags
                                }
                            })
                            .auth(username, password)
                            .end(function (err) {
                                if (err) return callback(err);

                                callback();
                            });
                    });
                });
            });
        },
        notificationPushed: function (data, callback) {
            callback = callback || function (err) {
                if (err) console.log("Error: ", err);
            };

            if (!sendNotificationUrl || !username || !password) return callback(new Error("Missing url or credentials"));

            if (!data || !data.uids || !data.uids.length || !data.notification || !data.notification.tid) return callback(new Error("Missing data"));

            async.parallel([
                function (done) {
                    User.getUsersData(data.uids, done);
                },
                function (done) {
                    Topics.getTopicData(data.notification.tid, done);
                },
                function (done) {
                    Topics.getTopicTags(data.notification.tid, done);
                }
            ], function (err, results) {
                if (err) return callback(err);

                data.users = results[0];
                data.topic = results[1];
                data.tags = results[2];
                var body = formatRequestBody(data);

                console.log("Sending data ", body, " to url ", sendNotificationUrl);
                request
                    .post(sendNotificationUrl)
                    .send(body)
                    .auth(username, password)
                    .end(function (err) {
                        if (err) return callback(err);

                        callback();
                    });
            });
        }
    };

    module.exports = plugin;
})();
